<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zdb.modules.customer.dao.CustomerIndustryCommerceMapper">
  <resultMap id="BaseResultMap" type="com.zdb.modules.customer.entity.CustomerIndustryCommerce">
    <id column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="social_redit_ode" jdbcType="VARCHAR" property="socialReditOde" />
    <result column="tax_id_number" jdbcType="VARCHAR" property="taxIdNumber" />
    <result column="legal_person" jdbcType="VARCHAR" property="legalPerson" />
    <result column="legal_person_id" jdbcType="VARCHAR" property="legalPersonId" />
    <result column="register_addr" jdbcType="VARCHAR" property="registerAddr" />
    <result column="register_capital" jdbcType="VARCHAR" property="registerCapital" />
    <result column="start_date" jdbcType="VARCHAR" property="startDate" />
    <result column="business_term" jdbcType="VARCHAR" property="businessTerm" />
    <result column="shareholder" jdbcType="VARCHAR" property="shareholder" />
    <result column="industry_commerce_account" jdbcType="VARCHAR" property="industryCommerceAccount" />
    <result column="industry_commerce_pwd" jdbcType="VARCHAR" property="industryCommercePwd" />
    <result column="annual_report" jdbcType="VARCHAR" property="annualReport" />
    <result column="print_receipt_password" jdbcType="VARCHAR" property="printReceiptPassword" />
    <result column="business_status" jdbcType="VARCHAR" property="businessStatus" />
    <result column="abnormal_list" jdbcType="VARCHAR" property="abnormalList" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    customer_id, social_redit_ode, tax_id_number, legal_person, legal_person_id, register_addr, 
    register_capital, start_date, business_term, shareholder, industry_commerce_account, industry_commerce_pwd, 
    annual_report, print_receipt_password, business_status, abnormal_list, remark, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer_industry_commerce
    where customer_id = #{customerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer_industry_commerce
    where customer_id = #{customerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zdb.modules.customer.entity.CustomerIndustryCommerce">
    insert into customer_industry_commerce (customer_id, social_redit_ode, tax_id_number, 
      legal_person, legal_person_id, register_addr, 
      register_capital, shareholder, industry_commerce_account, 
      industry_commerce_pwd, annual_report, print_receipt_password, 
      remark, create_time, update_time
      )
    values (#{customerId,jdbcType=INTEGER}, #{socialReditOde,jdbcType=VARCHAR}, #{taxIdNumber,jdbcType=VARCHAR}, 
      #{legalPerson,jdbcType=VARCHAR}, #{legalPersonId,jdbcType=VARCHAR}, #{registerAddr,jdbcType=VARCHAR}, 
      #{registerCapital,jdbcType=VARCHAR}, #{shareholder,jdbcType=VARCHAR}, #{industryCommerceAccount,jdbcType=VARCHAR}, 
      #{industryCommercePwd,jdbcType=VARCHAR}, #{annualReport,jdbcType=VARCHAR}, #{printReceiptPassword,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zdb.modules.customer.entity.CustomerIndustryCommerce">
    insert into customer_industry_commerce
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="socialReditOde != null">
        social_redit_ode,
      </if>
      <if test="taxIdNumber != null">
        tax_id_number,
      </if>
      <if test="legalPerson != null">
        legal_person,
      </if>
      <if test="legalPersonId != null">
        legal_person_id,
      </if>
      <if test="registerAddr != null">
        register_addr,
      </if>
      <if test="registerCapital != null">
        register_capital,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="businessTerm != null">
        business_term,
      </if>
      <if test="shareholder != null">
        shareholder,
      </if>
      <if test="industryCommerceAccount != null">
        industry_commerce_account,
      </if>
      <if test="industryCommercePwd != null">
        industry_commerce_pwd,
      </if>
      <if test="annualReport != null">
        annual_report,
      </if>
      <if test="printReceiptPassword != null">
        print_receipt_password,
      </if>
      <if test="businessStatus != null">
        business_status,
      </if>
      <if test="abnormalList != null">
        abnormal_list,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="socialReditOde != null">
        #{socialReditOde,jdbcType=VARCHAR},
      </if>
      <if test="taxIdNumber != null">
        #{taxIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="legalPerson != null">
        #{legalPerson,jdbcType=VARCHAR},
      </if>
      <if test="legalPersonId != null">
        #{legalPersonId,jdbcType=VARCHAR},
      </if>
      <if test="registerAddr != null">
        #{registerAddr,jdbcType=VARCHAR},
      </if>
      <if test="registerCapital != null">
        #{registerCapital,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="businessTerm != null">
        #{businessTerm,jdbcType=VARCHAR},
      </if>
      <if test="shareholder != null">
        #{shareholder,jdbcType=VARCHAR},
      </if>
      <if test="industryCommerceAccount != null">
        #{industryCommerceAccount,jdbcType=VARCHAR},
      </if>
      <if test="industryCommercePwd != null">
        #{industryCommercePwd,jdbcType=VARCHAR},
      </if>
      <if test="annualReport != null">
        #{annualReport,jdbcType=VARCHAR},
      </if>
      <if test="printReceiptPassword != null">
        #{printReceiptPassword,jdbcType=VARCHAR},
      </if>
      <if test="businessStatus != null">
        #{businessStatus,jdbcType=VARCHAR},
      </if>
      <if test="abnormalList != null">
        #{abnormalList,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zdb.modules.customer.entity.CustomerIndustryCommerce">
    update customer_industry_commerce
    <set>
      <if test="socialReditOde != null">
        social_redit_ode = #{socialReditOde,jdbcType=VARCHAR},
      </if>
      <if test="taxIdNumber != null">
        tax_id_number = #{taxIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="legalPerson != null">
        legal_person = #{legalPerson,jdbcType=VARCHAR},
      </if>
      <if test="legalPersonId != null">
        legal_person_id = #{legalPersonId,jdbcType=VARCHAR},
      </if>
      <if test="registerAddr != null">
        register_addr = #{registerAddr,jdbcType=VARCHAR},
      </if>
      <if test="registerCapital != null">
        register_capital = #{registerCapital,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="businessTerm != null">
        business_term = #{businessTerm,jdbcType=VARCHAR},
      </if>
      <if test="shareholder != null">
        shareholder = #{shareholder,jdbcType=VARCHAR},
      </if>
      <if test="industryCommerceAccount != null">
        industry_commerce_account = #{industryCommerceAccount,jdbcType=VARCHAR},
      </if>
      <if test="industryCommercePwd != null">
        industry_commerce_pwd = #{industryCommercePwd,jdbcType=VARCHAR},
      </if>
      <if test="annualReport != null">
        annual_report = #{annualReport,jdbcType=VARCHAR},
      </if>
      <if test="printReceiptPassword != null">
        print_receipt_password = #{printReceiptPassword,jdbcType=VARCHAR},
      </if>
      <if test="businessStatus != null">
        business_status = #{businessStatus,jdbcType=VARCHAR},
      </if>
      <if test="abnormalList != null">
        abnormal_list = #{abnormalList,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where customer_id = #{customerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zdb.modules.customer.entity.CustomerIndustryCommerce">
    update customer_industry_commerce
    set social_redit_ode = #{socialReditOde,jdbcType=VARCHAR},
      tax_id_number = #{taxIdNumber,jdbcType=VARCHAR},
      legal_person = #{legalPerson,jdbcType=VARCHAR},
      legal_person_id = #{legalPersonId,jdbcType=VARCHAR},
      register_addr = #{registerAddr,jdbcType=VARCHAR},
      register_capital = #{registerCapital,jdbcType=VARCHAR},
      shareholder = #{shareholder,jdbcType=VARCHAR},
      industry_commerce_account = #{industryCommerceAccount,jdbcType=VARCHAR},
      industry_commerce_pwd = #{industryCommercePwd,jdbcType=VARCHAR},
      annual_report = #{annualReport,jdbcType=VARCHAR},
      print_receipt_password = #{printReceiptPassword,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where customer_id = #{customerId,jdbcType=INTEGER}
  </update>
  
  <delete id="deleteBatch">
		delete from customer_industry_commerce where customer_id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
</mapper>